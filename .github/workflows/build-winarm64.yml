name: build-winarm64

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: winarm64
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Visual Studio Build Tools
        run: |
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vs_buildtools.exe -OutFile vs_buildtools.exe
          Start-Process -FilePath .\vs_buildtools.exe -ArgumentList '--quiet', '--wait', '--norestart', '--nocache', `
            '--installPath', 'C:\BuildTools', `
            '--add', 'Microsoft.VisualStudio.Component.VC.Tools.ARM64', `
            '--add', 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64', `
            '--add', 'Microsoft.VisualStudio.Component.Windows11SDK.22000' `
            -NoNewWindow -Wait
          Remove-Item vs_buildtools.exe -Force -ErrorAction SilentlyContinue
          if (Test-Path vs_buildtools.exe) {
            Write-Warning "Failed to remove vs_buildtools.exe. This file may need manual cleanup."
          }
      - name: Set up Visual Studio environment
        run: |
            Import-Module "C:\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
            Enter-VsDevShell -VsInstallPath "C:\BuildTools" -SkipAutomaticLocation -DevCmdArguments "-arch=arm64 -host_arch=arm64"
      - name: Install Rust
        run: |
          Invoke-WebRequest -Uri https://win.rustup.rs -OutFile rustup-init.exe
          Start-Process -FilePath .\rustup-init.exe -ArgumentList '-y' -NoNewWindow -Wait
          Remove-Item rustup-init.exe
      - name: Set up Rust environment
        run: |
          $Env:RUSTUP_HOME="$Env:USERPROFILE\.rustup"
          $Env:CARGO_HOME="$Env:USERPROFILE\.cargo"
          $Env:PATH += ";$Env:CARGO_HOME\bin"
          echo "$Env:CARGO_HOME\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          rustc --version
      - name: Run cargo test
        run: cargo test --target ${{ matrix.target }}
      - name: Run cargo build
        run: cargo build --target ${{ matrix.target }}
