name: setup-android
description: setup android and ndk

inputs:
  api-level:
    description: "API level to use"
    required: false
    default: "34"
  ndk:
    description: "NDK version to use"
    required: false
    default: "27.1.12297006"
  arch:
    description: "Architecture to use"
    required: false
    default: "arm64-v8a"
  profile:
    description: "Profile to use"
    required: false
    default: "medium_phone"

runs:
  using: composite
  steps:
    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v3
    - name: Cache Android SDK
      uses: actions/cache@v3
      with:
        path: |
          ~/.android/sdk
        key: ${{ runner.os }}-android-sdk-${{ inputs.api-level }}-${{ inputs.ndk }}
        restore-keys: |
          ${{ runner.os }}-android-sdk-
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: "17"
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - name: Install NDK
      shell: bash
      run: sdkmanager "ndk;${{ inputs.ndk }}"
    - name: Enable KVM
      shell: bash
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ inputs.api-level }}-${{ inputs.ndk }}-${{ inputs.arch }}
    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ inputs.api-level }}
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        # ndk: ${{ inputs.ndk }}
        # arch: ${{ inputs.arch }}
        # profile: ${{ inputs.profile }}
        script: echo "Generated AVD snapshot for caching."
